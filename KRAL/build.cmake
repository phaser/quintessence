# The project is licensed under GNU GPL v3. See $(PROJECT_ROOT)/docs/gpl-3.0.txt for more details.
#
# klar
# Copyright (C) 2011 Cristian Bidea

cmake_minimum_required (VERSION 2.8)
cmake_policy(SET CMP0054 NEW)

set (TARGET_NAME    0)
set (KRAL_PATH      1)
set (PACKAGE_DIRS   2)
set (PROJECTS_ROOT  3)
set (PLATFORM       4)
set (PROJECT_DIR    5)
set (BUILD_DIR      6)
set (PROJECT_TYPE   7)
set (BUILD_TYPE     8)
set (CUSTOM_ARGS    9)
set (NUM_PROPS      9)
set (LIST_NAMES "TARGET_NAME;KRAL_PATH;PACKAGE_DIRS;PROJECTS_ROOT;PLATFORM;PROJECT_DIR;BUILD_DIR;PROJECT_TYPE;BUILD_TYPE;CUSTOM_ARGS")

function(create_target LST)
    foreach (idx RANGE ${NUM_PROPS})
        list(APPEND ${LST} "_N_")
    endforeach()
    set (${LST} "${${LST}}" PARENT_SCOPE)
    set_target_value(${LST} ${TARGET_NAME} ${LST})
    set (${LST} "${${LST}}" PARENT_SCOPE)
endfunction()

function(set_target_value LST IDX VALUE)
    list(REMOVE_AT ${LST} ${IDX})
    list(INSERT ${LST} ${IDX} ${VALUE}) 
    set (${LST} "${${LST}}" PARENT_SCOPE)
endfunction()

macro(get_target_value LST IDX OVAL)
    list(GET ${LST} ${IDX} __TEMP)
    string(REPLACE "_&_" ";" OVAL "${__TEMP}")
endmacro()

macro(transform_to_list PLIST ML)
    string(REPLACE "_&_" ";" ML "${PLIST}")
endmacro()

function(print_target LST)
    list(GET ${LST} 0 OUTVAR)
    message ("Listing ${OUTVAR}...") 
    foreach(idx RANGE 1 ${NUM_PROPS})
        list(GET LIST_NAMES ${idx} NVAR)
        list(GET ${LST} ${idx} OUTVAR)
        transform_to_list(${OUTVAR} ML)
        message("\t${NVAR}:\t${ML}")
    endforeach()
endfunction()

function(add_target TNAME)
    create_target(${TNAME})
    set (value 0)
    while (value LESS ${ARGC})
        message ("E${value}: ${ARGV${value}}")
        if      ("KRAL_PATH" STREQUAL "${ARGV${value}}")
            math (EXPR value "${value} + 1")
            set_target_value(${TNAME} ${KRAL_PATH} ${ARGV${value}}) 
        elseif  ("PACKAGE_DIRS" STREQUAL "${ARGV${value}}")
            math (EXPR value "${value} + 1")
            string(REPLACE ";" "_&_" OVAL "${ARGV${value}}")
            set_target_value(${TNAME} ${PACKAGE_DIRS} ${OVAL}) 
        elseif  ("PROJECTS_ROOT" STREQUAL "${ARGV${value}}")
            math (EXPR value "${value} + 1")
            set_target_value(${TNAME} ${PROJECTS_ROOT} ${ARGV${value}}) 
        endif()
        math(EXPR value "${value} + 1")
    endwhile()
    print_target(${TNAME})
endfunction()

include (${CMAKE_SOURCE_DIR}/config_new.cmake)
